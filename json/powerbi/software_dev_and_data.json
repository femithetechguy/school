{
  "title": "Software Development and Data: The Relationship",
  "description": "Software development and data are increasingly interconnected, especially in modern, data-driven applications and platforms. Software creates, consumes, and interacts with data, while data analytics and engineering process and transform that data to provide insight, automation, and decision support.",
  "items": [
    {
      "title": "How They Intersect",
      "details": [
        {
          "label": "Data in Application Development",
          "items": [
            "Applications collect data from users, sensors, transactions, logs, and more.",
            "Databases (SQL, NoSQL) are used to store and manage this data.",
            "APIs allow data exchange across systems.",
            "Example: A retail web app collects sales and customer data, stored in PostgreSQL and exposed to analysts via APIs or direct access."
          ]
        },
        {
          "label": "Analytics to Improve Applications",
          "items": [
            "Software teams use analytics and logs to understand user behavior, performance metrics, and business KPIs.",
            "Example: A SaaS product uses Power BI to analyze feature adoption or optimize pricing models."
          ]
        },
        {
          "label": "Software for Data Systems",
          "items": [
            "Many data tools are software platforms: ETL pipelines, data platforms (Airflow, dbt, Spark), custom dashboards or data apps.",
            "Example: A developer builds a Flask app that displays business metrics from Snowflake."
          ]
        },
        {
          "label": "DevOps + DataOps",
          "items": [
            "Software development practices like version control, CI/CD, and testing are now used in data pipeline deployments, model versioning, and infrastructure provisioning.",
            "Example: A data team uses Git and Azure DevOps pipelines to deploy dbt models into production."
          ]
        },
        {
          "label": "APIs & Microservices for Data Access",
          "items": [
            "Developers build APIs/services to fetch processed data, trigger ETL jobs or ML predictions, and secure data access."
          ]
        }
      ]
    },
    {
      "title": "Tools Bridging Both Worlds",
      "details": [
        {
          "label": "Key Tools Table",
          "items": [
            {"tool": "Python", "data_use": "Data pipelines, analytics, ML"},
            {"tool": "SQL", "data_use": "Core to both backend dev & analytics"},
            {"tool": "Git/GitHub", "data_use": "Source control for code and data models"},
            {"tool": "Docker", "data_use": "Packaging for data tools and microservices"},
            {"tool": "REST APIs", "data_use": "Exposing or consuming data"},
            {"tool": "Power BI / Tableau Embedded", "data_use": "Embedding analytics in applications"}
          ]
        }
      ]
    },
    {
      "title": "Summary",
      "details": [
        {
          "label": "Comparison Table",
          "items": [
            {
              "area": "Software Dev",
              "goal": "Build functionality",
              "input": "Requirements, features",
              "output": "Applications",
              "tools": "Git, APIs, IDEs, Frameworks",
              "overlap": "Data-driven apps, analytics pipelines, embedded BI, API development"
            },
            {
              "area": "Data",
              "goal": "Deliver insights",
              "input": "Raw data",
              "output": "Reports, dashboards, predictions",
              "tools": "SQL, Power BI, ETL, Python",
              "overlap": "Data-driven apps, analytics pipelines, embedded BI, API development"
            }
          ]
        }
      ]
    }
  ]
}
